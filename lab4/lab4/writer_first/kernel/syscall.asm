
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;                               syscall.asm
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;                                                     Forrest Yu, 2005
; ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

%include "sconst.inc"

INT_VECTOR_SYS_CALL equ 0x90
_NR_get_ticks       equ 0
_NR_write	    equ 1
_NR_sleep	    equ 2
_NR_p	            equ 3
_NR_v	            equ 4

; 导出符号
global	get_ticks
global	write
global	sleep
global	p
global	v

bits 32
[section .text]

; ====================================================================
;                              get_ticks
; ====================================================================
get_ticks:
	mov	eax, _NR_get_ticks
	int	INT_VECTOR_SYS_CALL
	ret

; ====================================================================================
;                          void write(char* buf);
; ====================================================================================
write:
        mov     eax, _NR_write
        mov     ecx, [esp + 4]
        int     INT_VECTOR_SYS_CALL
        ret

; ====================================================================================
;                          void sleep(int milli_seconds);
; ====================================================================================
sleep:
        mov     eax, _NR_sleep
        mov     ecx, [esp + 4]
        int     INT_VECTOR_SYS_CALL
        ret

; ====================================================================================
;                          void p(void* mutex);
; ====================================================================================
p:
        mov     eax, _NR_p
        mov     ecx, [esp + 4]
        int     INT_VECTOR_SYS_CALL
        ret

; ====================================================================================
;                          void v(void* mutex);
; ====================================================================================
v:
        mov     eax, _NR_v
        mov     ecx, [esp + 4]
        int     INT_VECTOR_SYS_CALL
        ret